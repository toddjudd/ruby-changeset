name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # services:
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379
    #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  require_changeset:
    runs-on: ubuntu-latest
    # don't run tests for changeset release PRs
    if: github.ref != 'refs/heads/changeset-release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure main branch is up-to-date
        run: git fetch origin main:main

      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - uses: actions/setup-node@v3
        with:
          node-version: 23.x
          cache: "pnpm"

      - name: Install Changesets CLI
        run: pnpm add @changesets/cli

      - name: Check for Changeset
        id: changeset_check
        run: |
          echo "Starting changeset check..."
          pnpm changeset status --output changeset.json

          CHANGESETS_LENGTH=$(jq '.changesets | length' changeset.json)
          IS_EMPTY=$(jq '.changesets | length == 0' changeset.json)

          if [ "$IS_EMPTY" = "true" ]; then
            echo "no_changeset=true" >> $GITHUB_OUTPUT
          else
            echo "no_changeset=false" >> $GITHUB_OUTPUT
          fi

          echo "=== final output value ==="
          echo "no_changeset value set to: $(cat $GITHUB_OUTPUT | grep no_changeset)"

      - name: Fail if no Changeset found
        if: ${{ steps.changeset_check.outputs.no_changeset == 'true' && github.event_name == 'pull_request' }}
        run: |
          echo "A Changeset is required for this PR. Please create one using 'pnpx changeset'."
          exit 1
